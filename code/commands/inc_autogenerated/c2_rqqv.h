// ** C2Rqqv Class ** //
// Autogenerated in QDP Commands ** //
// Manzano Software //

#ifndef _MZN_CMD_C2_RQQV_H
#define _MZN_CMD_C2_RQQV_H

#include "command.h"

namespace mzn {
class C2Rqqv : public Command {

friend std::ostream & operator<<(std::ostream & cmd_os, C2Rqqv const & cmd);

public:

    explicit C2Rqqv();
    ~C2Rqqv() = default;

    C2Rqqv(C2Rqqv && rhs) = default;
    C2Rqqv & operator=(C2Rqqv && rhs) = default;
    C2Rqqv(C2Rqqv const & rhs) = default;
    C2Rqqv & operator=(C2Rqqv const & rhs) = default;
    std::string const cmd_name = "c2_rqqv";

    CmdField<uint32_t> lowest_sequence_number;
    BmChannelMap channel_map;

    uint16_t msg_to_data(std::vector<uint8_t> const & msg,
                         uint16_t mf_begin) override;

    uint16_t data_to_msg(std::vector<uint8_t> & msg,
                         uint16_t mf_begin) const override;

private:

    std::ostream & os_print(std::ostream & cmd_os) const override;
};


inline std::ostream & operator<<(std::ostream & cmd_os, C2Rqqv const & cmd) {
    return cmd.os_print(cmd_os);
}

} // end namespace
#endif // _MZN_CMD_C2_RQQV_H
