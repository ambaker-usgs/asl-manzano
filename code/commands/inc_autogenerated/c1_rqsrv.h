// ** C1Rqsrv Class ** //
// Autogenerated in QDP Commands ** //
// Manzano Software //

#ifndef _MZN_CMD_C1_RQSRV_H
#define _MZN_CMD_C1_RQSRV_H

#include "command.h"

namespace mzn {
class C1Rqsrv : public Command {

friend std::ostream & operator<<(std::ostream & cmd_os, C1Rqsrv const & cmd);

public:

    explicit C1Rqsrv();
    ~C1Rqsrv() = default;

    C1Rqsrv(C1Rqsrv && rhs) = default;
    C1Rqsrv & operator=(C1Rqsrv && rhs) = default;
    C1Rqsrv(C1Rqsrv const & rhs) = default;
    C1Rqsrv & operator=(C1Rqsrv const & rhs) = default;
    std::string const cmd_name = "c1_rqsrv";

    CmdFieldHex<uint64_t> serial_number;

    uint16_t msg_to_data(std::vector<uint8_t> const & msg,
                         uint16_t mf_begin) override;

    uint16_t data_to_msg(std::vector<uint8_t> & msg,
                         uint16_t mf_begin) const override;

private:

    std::ostream & os_print(std::ostream & cmd_os) const override;
};


inline std::ostream & operator<<(std::ostream & cmd_os, C1Rqsrv const & cmd) {
    return cmd.os_print(cmd_os);
}

} // end namespace
#endif // _MZN_CMD_C1_RQSRV_H
