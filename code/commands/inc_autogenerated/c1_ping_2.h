// ** C1Ping2 Class ** //
// Autogenerated in QDP Commands ** //
// Manzano Software //

#ifndef _MZN_CMD_C1_PING_2_H
#define _MZN_CMD_C1_PING_2_H

#include "command.h"

namespace mzn {
class C1Ping2 : public Command {

friend std::ostream & operator<<(std::ostream & cmd_os, C1Ping2 const & cmd);

public:

    explicit C1Ping2();
    ~C1Ping2() = default;

    C1Ping2(C1Ping2 && rhs) = default;
    C1Ping2 & operator=(C1Ping2 && rhs) = default;
    C1Ping2(C1Ping2 const & rhs) = default;
    C1Ping2 & operator=(C1Ping2 const & rhs) = default;
    std::string const cmd_name = "c1_ping_2";

    CmdField<uint16_t> ping_type;
    CmdField<uint16_t> user_message_number;
    BmRqstat status_request_bitmap;

    uint16_t msg_to_data(std::vector<uint8_t> const & msg,
                         uint16_t mf_begin) override;

    uint16_t data_to_msg(std::vector<uint8_t> & msg,
                         uint16_t mf_begin) const override;

private:

    std::ostream & os_print(std::ostream & cmd_os) const override;
};


inline std::ostream & operator<<(std::ostream & cmd_os, C1Ping2 const & cmd) {
    return cmd.os_print(cmd_os);
}

} // end namespace
#endif // _MZN_CMD_C1_PING_2_H
